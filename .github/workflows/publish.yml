name: Publish to npm

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write # needed for `npm publish --provenance`

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Verify tag matches package.json version
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: $TAG ; package.json: v$PKG_VERSION"
          if [ "$TAG" != "v$PKG_VERSION" ]; then
            echo "Tag version and package.json version mismatch"; exit 1; fi

      - name: Install deps
        run: npm ci --ignore-scripts

      - name: Preview package contents
        run: npm pack --dry-run

      - name: Skip if this version is already on npm
        id: check_published
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          PUBLISHED=$(npm view "$NAME@${VERSION}" version || true)
          if [ "$PUBLISHED" = "$VERSION" ]; then
            echo "already=true" >> "$GITHUB_OUTPUT"
          else
            echo "already=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish
        if: steps.check_published.outputs.already == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # If your package.json has "publishConfig": { "access": "public" }
          # you can drop the --access flag.
          npm publish --provenance --access public

      - name: Done (already published)
        if: steps.check_published.outputs.already == 'true'
        run: echo "This version is already on npm. Skipping publish."
