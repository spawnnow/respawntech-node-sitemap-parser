# .github/workflows/publish-npm.yml
name: Publish to npm

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: publish-npm-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    name: Publish if version is new
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: npm

      - name: Install
        run: npm ci

      - name: Build (if present)
        run: npm run build --if-present

      - name: Check if this version already exists on npm
        id: check
        shell: bash
        run: |
          set -euo pipefail
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "package=$NAME" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

          if npm view "$NAME@$VERSION" version >/dev/null 2>&1; then
            echo "should-publish=false" >> "$GITHUB_OUTPUT"
            echo "Version $VERSION already exists on npm for $NAME. Skipping publish."
          else
            echo "should-publish=true" >> "$GITHUB_OUTPUT"
            echo "Version $VERSION not found on npm for $NAME. Will publish."
          fi

      - name: Publish to npm
        if: steps.check.outputs.should-publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          NAME=${{ steps.check.outputs.package }}
          # If the package is scoped, first publish requires --access public.
          if node -p "require('./package.json').name.startsWith('@') ? 'true' : 'false'" | grep -q true; then
            npm publish --access public
          else
            npm publish
          fi

      - name: Summary
        run: |
          echo "Package: ${{ steps.check.outputs.package }}" >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ steps.check.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Published: ${{ steps.check.outputs.should-publish }}" >> $GITHUB_STEP_SUMMARY
